{"version":3,"sources":["App.js","index.js"],"names":["PageInfo","state","setState","pageinfo","collapse","display","division","updateState","newState","className","type","value","page_size","onChange","e","target","page_margin","checked","style","division_amount","division_margin","GridInfo","gridinfo","subdivide","size","color","subdivide_number","subdivide_color","App","response","endpoint","properties","updatePagePropState","bind","sendPageProps","this","socket","socketIO","on","data","preventDefault","console","log","emit","onClick","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d38f5100.chunk.js","sourcesContent":["import React from \"react\";\nimport socketIO from 'socket.io-client'\n\nconst PageInfo = ({ state, setState }) => {\n  const pageinfo = state.pageinfo;\n  const collapse = { display: !pageinfo.division ? \"none\" : \"\" };\n\n  const updateState = newState => {\n    setState({ ...state, pageinfo: newState });\n  };\n\n  return (\n    <div>\n      <p className=\"card-header-title\">Page Info</p>\n\n      <div>\n        <label>Size</label>\n        <input\n          type=\"text\"\n          value={pageinfo.page_size}\n          onChange={e => {\n            updateState({ ...pageinfo, page_size: e.target.value });\n          }}\n        />\n      </div>\n\n      <div>\n        <label>Margin</label>\n        <input\n          type=\"number\"\n          value={pageinfo.page_margin}\n          onChange={e => {\n            updateState({ ...pageinfo, page_margin: e.target.value });\n          }}\n        />\n      </div>\n\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={pageinfo.division}\n          onChange={e => {\n            updateState({ ...pageinfo, division: e.target.checked });\n          }}\n        />\n        <label>Multiple grids per page</label>\n      </div>\n\n      <div style={collapse}>\n        <div>\n          <label>Number of Grids on Page</label>\n          <input\n            type=\"number\"\n            value={pageinfo.division_amount}\n            onChange={e => {\n              updateState({ ...pageinfo, division_amount: e.target.value });\n            }}\n          />\n        </div>\n\n        <div>\n          <label>Inter Grid Spacing</label>\n          <input\n            type=\"number\"\n            value={pageinfo.division_margin}\n            onChange={e => {\n              updateState({ ...pageinfo, division_margin: e.target.value });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst GridInfo = ({ state, setState }) => {\n  const gridinfo = state.gridinfo;\n\n  const collapse = { display: !gridinfo.subdivide ? \"none\" : \"\" };\n\n  const updateState = newState => {\n    setState({ ...state, gridinfo: newState });\n  };\n\n  return (\n    <div>\n      <div>\n        <label>Grid Size</label>\n        <div>\n          <input\n            value={gridinfo.size}\n            onChange={e => updateState({ ...gridinfo, size: e.target.value })}\n            type=\"number\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label className=\"label\">Grid Color</label>\n        <div>\n          <input\n            value={gridinfo.color}\n            onChange={e => updateState({ ...gridinfo, color: e.target.value })}\n            type=\"color\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <input\n          value={gridinfo.subdivide}\n          onChange={e =>\n            updateState({ ...gridinfo, subdivide: e.target.checked })\n          }\n          type=\"checkbox\"\n        />\n        <label>Subdivide</label>\n      </div>\n\n      <div style={collapse}>\n        <div>\n          <label>Number of Subdivisions</label>\n          <div>\n            <input\n              value={gridinfo.subdivide_number}\n              onChange={e =>\n                updateState({ ...gridinfo, subdivide_number: e.target.value })\n              }\n              type=\"number\"\n            />\n          </div>\n        </div>\n\n        <div>\n          <label>Subdivision Color</label>\n          <div>\n            <input\n              value={gridinfo.subdivide_color}\n              onChange={e =>\n                updateState({ ...gridinfo, subdivide_color: e.target.value })\n              }\n              type=\"color\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      response: '',\n      endpoint: '/',\n      properties: {\n        pageinfo: {\n          page_size: \"\",\n          page_margin: 0,\n          division: false,\n          division_amount: 0,\n          division_margin: 0\n        },\n        gridinfo: {\n          size: 1,\n          color: \"#54c384\",\n          subdivide: false,\n          subdivide_number: 0,\n          subdivide_color: \"#a341b7\"\n        }\n      }\n    }\n    this.updatePagePropState = this.updatePagePropState.bind(this)\n    this.sendPageProps = this.sendPageProps.bind(this)\n  }\n\n  componentDidMount() {\n    const {endpoint} = this.state\n    this.socket = socketIO(endpoint)\n    this.socket.on('pdf', data => this.setState({response: data}))\n  }\n\n  updatePagePropState(newState) {\n    this.setState({properties: newState})\n  }\n\n  sendPageProps(e) {\n    e.preventDefault()\n    console.log(this.state.properties)\n    this.socket.emit('page_properties', this.state.properties)\n  }\n\n  render() {\n    const {properties} = this.state\n\n    return (\n      <div>\n        <form>\n          <PageInfo state={properties} setState={this.updatePagePropState} />\n          <GridInfo state={properties} setState={this.updatePagePropState} />\n        </form>\n        <button\n          onClick={this.sendPageProps}\n        >\n          Generate\n        </button>\n        <a href={this.state.response}>Link</a>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}