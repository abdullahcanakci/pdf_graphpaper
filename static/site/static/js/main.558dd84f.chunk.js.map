{"version":3,"sources":["components/GridSettings.js","components/PageSettings.js","components/Grid.js","App.js","index.js"],"names":["GridSettings","state","setState","gridinfo","collapse","display","secondary_division","updateState","newState","className","value","primary_cell_size","onChange","e","target","type","primary_cell_color","checked","style","secondary_division_amount","subdivide_number","secondary_color","PageSettings","pageinfo","multi_grid","style_portrait","portrait","style_landscape","page_size","onClick","preventDefault","page_margin_vertical","page_margin_horizontal","multi_grid_number","Grid","props","socket","downloadLink","primary_number_of_cells","updatePagePropState","bind","sendPageProps","this","on","data","updatedState","console","log","emit","visible","href","download","React","Component","socketIO","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.558dd84f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GridSettings = ({ state, setState }) => {\n  const gridinfo = state;\n\n  const collapse = { display: !gridinfo.secondary_division ? \"none\" : \"\" };\n\n  const updateState = newState => {\n    setState({ gridinfo: newState });\n  };\n\n  return (\n    <div>\n      <h2 className=\"title\">Grid Info</h2>\n      <div className=\"columns\">\n        <div className=\"column is-10 is-offset-1\">\n          <div className=\"columns\">\n            <div className=\"field column is-half\">\n              <label className=\"label\">Grid Size</label>\n              <input\n                className=\"input\"\n                value={gridinfo.primary_cell_size}\n                onChange={e =>\n                  updateState({\n                    ...gridinfo,\n                    primary_cell_size: e.target.value\n                  })\n                }\n                type=\"number\"\n              />\n            </div>\n\n            <div className=\"field column is-half\">\n              <label className=\"label\">Grid Color</label>\n              <input\n                className=\"input\"\n                value={gridinfo.primary_cell_color}\n                onChange={e =>\n                  updateState({\n                    ...gridinfo,\n                    primary_cell_color: e.target.value\n                  })\n                }\n                type=\"color\"\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                value={gridinfo.secondary_division}\n                onChange={e =>\n                  updateState({\n                    ...gridinfo,\n                    secondary_division: e.target.checked\n                  })\n                }\n              />\n              Subdivide\n            </label>\n          </div>\n\n          <div style={collapse}>\n            <div className=\"columns\">\n              <div className=\"column is-half\">\n                <div className=\"field\">\n                  <label className=\"label\">Number of Subdivisions</label>\n                  <input\n                    className=\"input\"\n                    type=\"number\"\n                    value={gridinfo.secondary_division_amount}\n                    onChange={e =>\n                      updateState({\n                        ...gridinfo,\n                        subdivide_number: e.target.value\n                      })\n                    }\n                  />\n                </div>\n              </div>\n\n              <div className=\"field column is-half\">\n                <label className=\"label\">Subdivision Color</label>\n                <input\n                  className=\"input\"\n                  type=\"color\"\n                  value={gridinfo.secondary_color}\n                  onChange={e =>\n                    updateState({\n                      ...gridinfo,\n                      secondary_color: e.target.value\n                    })\n                  }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GridSettings;\n","import React from \"react\";\n\nconst PageSettings = ({ state, setState }) => {\n  const pageinfo = state;\n\n  const collapse = { display: !pageinfo.multi_grid ? \"none\" : \"\" };\n\n  const updateState = newState => {\n    setState({ pageinfo: newState });\n  };\n\n  const style_portrait = pageinfo.portrait\n    ? \"button is-info is-selected is-\"\n    : \"button\";\n  const style_landscape = !pageinfo.portrait\n    ? \"button is-info is-selected\"\n    : \"button\";\n\n  return (\n    <div>\n      <h2 className=\"title\">Page Info</h2>\n      <div className=\"columns\">\n        <div className=\"column is-10 is-offset-1\">\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <div className=\"field\">\n                <label className=\"label\">Page Size</label>\n                <div className=\"control is-expanded\">\n                  <div className=\"select is-fullwidth\">\n                    <select\n                      value={pageinfo.page_size}\n                      onChange={e => {\n                        updateState({ ...pageinfo, page_size: e.target.value });\n                      }}\n                    >\n                      <option value=\"A4\">A4</option>\n                      <option value=\"A5\">A5</option>\n                      <option value=\"Letter\">Letter</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"column is-half\">\n              <div className=\"field is-full-width\">\n                <label className=\"label\">Orientation</label>\n                <div className=\"buttons has-addons is-grouped is-centered\">\n                  <button\n                    className={style_portrait}\n                    onClick={e => {\n                      e.preventDefault();\n                      updateState({ ...pageinfo, portrait: true });\n                    }}\n                  >\n                    Portrait\n                  </button>\n                  <button\n                    className={style_landscape}\n                    onClick={e => {\n                      e.preventDefault();\n                      updateState({ ...pageinfo, portrait: false });\n                    }}\n                  >\n                    Landscape\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"columns\">\n            <div className=\"column is-half\">\n              <div className=\"field\">\n                <label className=\"label\">Vertical Margin</label>\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  value={pageinfo.page_margin_vertical}\n                  onChange={e => {\n                    updateState({\n                      ...pageinfo,\n                      page_margin_vertical: e.target.value\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"column is-half\">\n              <div className=\"field\">\n                <label className=\"label\">Horizontal Margin</label>\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  value={pageinfo.page_margin_horizontal}\n                  onChange={e => {\n                    updateState({\n                      ...pageinfo,\n                      page_margin_horizontal: e.target.value\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <label className=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  checked={pageinfo.multi_grid}\n                  onChange={e => {\n                    updateState({ ...pageinfo, multi_grid: e.target.checked });\n                  }}\n                />\n                Multiple grids per page\n              </label>\n            </div>\n          </div>\n\n          <div style={collapse}>\n            <div className=\"field\">\n              <label className=\"label\">Number of Grids on Page</label>\n              <input\n                className=\"input\"\n                type=\"number\"\n                value={pageinfo.multi_grid_number}\n                onChange={e => {\n                  updateState({\n                    ...pageinfo,\n                    multi_grid_number: e.target.value\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageSettings;\n","import React from \"react\";\nimport GridSettings from './GridSettings'\nimport PageSettings from './PageSettings'\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props)\n    this.socket = this.props.socket\n    \n    this.state = {\n      downloadLink: '',\n      pageinfo: {\n        page_size: 'A4',\n        portrait: true,\n        page_margin_vertical: 20,\n        page_margin_horizontal: 15,\n        multi_grid: false,\n        multi_grid_number: 0,\n      },\n      gridinfo: {\n        primary_cell_size: 10,\n        primary_cell_color: \"#54c384\",\n        primary_number_of_cells: [-1, -1], // -1 unlimited\n        secondary_division: false,\n        secondary_division_amount: 2,\n        secondary_color: \"#a341b7\"\n      }\n    };\n    this.updatePagePropState = this.updatePagePropState.bind(this)\n    this.sendPageProps = this.sendPageProps.bind(this)\n  }\n\n  componentDidMount(){\n    this.socket.on('pdf_generation_finished', data => this.setState({downloadLink: data}))\n  }\n\n  updatePagePropState(updatedState) {\n    this.setState(updatedState)\n  }\n\n  sendPageProps(e) {\n    e.preventDefault()\n    console.log(this.state)\n    this.socket.emit('pdf_generation_request', {pageinfo: this.state.pageinfo, gridinfo: this.state.gridinfo})\n  }\n\n\n  render(){\n    const {pageinfo, gridinfo} = this.state\n    const visible = {display: this.state.downloadLink === '' ? \"none\": \"\"}\n    return (\n      <div className=\"columns\">\n        <div className=\"column is-three-fifths is-offset-one-fifth\">\n          <form>\n            <PageSettings state={pageinfo} setState={this.updatePagePropState} />\n            <GridSettings state={gridinfo} setState={this.updatePagePropState} />\n          </form>\n          <div className=\"buttons is-centered\">\n          <button className=\"button is-primary\"\n            onClick={this.sendPageProps}>\n            Generate\n          </button>\n          <a \n            href={this.state.downloadLink}\n            download=\"graphpaper.pdf\">\n            <button\n              style={visible}\n              type=\"submit\"\n              className=\"button is-success\"\n            >\n              Download\n            </button>\n          </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Grid\n","import React from \"react\";\nimport socketIO from 'socket.io-client'\nimport Grid from './components/Grid'\nconst socket = socketIO('/')\n\nclass App extends React.Component{\n  componentDidMount() {\n    console.log('app component')\n\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Grid socket={socket} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}